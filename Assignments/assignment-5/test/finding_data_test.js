// const mocha = require('mocha');
const assert = require('assert');
const GOTChar = require('../models/GOTChar');

describe('Finding records', function(){
  var char;
  beforeEach(function(done){
    char = new GOTChar({
      name: 'John Snow'
    })
    char.save().then(function(){
      done();
    })
  })

  // Create tests
  it('it finds one record from the database', function(done){
      GOTChar.findOne({ name: 'John Snow'}).then(function(result){
        assert( result.name === 'John Snow');
        done();
      })
  })

  // Finding using the ID property of the document.
  /*
    For the below test to run, we need to access char out of beforEach() block on the top.
    Because if we check the id in roboMongo it is generated by mongoDB automatically and we need to access that.
    To access that outside the beforeEach() we declare var char outside.

    Now we can access _id property of our char variable and check the result which is returned after the findOne() is done.
    The _id is type of an Object so if you assert (result._id === char._id) it will fail because it's trying to compare 2 Objects.
    Therefore we have to convert it toString() and compare.
  */
  it('it finds one record by ID from the database', function(done){
      GOTChar.findOne({ _id: char._id }).then(function(result){
        assert( result._id.toString() === char._id.toString());
        done();
      })
    })
  })
